[
    {
        "type": "convention",
        "module": "app",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/app.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "convention",
        "module": "tests.conftest",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/tests/conftest.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "convention",
        "module": "tests.conftest",
        "obj": "test_app",
        "line": 11,
        "column": 0,
        "endLine": 11,
        "endColumn": 12,
        "path": "backend/tests/conftest.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "tests.conftest",
        "obj": "csrf_token",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 14,
        "path": "backend/tests/conftest.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "tests.conftest",
        "obj": "csrf_token",
        "line": 19,
        "column": 15,
        "endLine": 19,
        "endColumn": 23,
        "path": "backend/tests/conftest.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'test_app' from outer scope (line 11)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "tests.conftest",
        "obj": "additional_params",
        "line": 33,
        "column": 0,
        "endLine": 33,
        "endColumn": 21,
        "path": "backend/tests/conftest.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "tests.conftest",
        "obj": "additional_params",
        "line": 33,
        "column": 22,
        "endLine": 33,
        "endColumn": 32,
        "path": "backend/tests/conftest.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'csrf_token' from outer scope (line 19)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "tests.conftest",
        "obj": "additional_params",
        "line": 33,
        "column": 22,
        "endLine": 33,
        "endColumn": 32,
        "path": "backend/tests/conftest.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'csrf_token'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "tests.conftest",
        "obj": "auth_client",
        "line": 47,
        "column": 0,
        "endLine": 47,
        "endColumn": 15,
        "path": "backend/tests/conftest.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "tests.conftest",
        "obj": "auth_client",
        "line": 47,
        "column": 16,
        "endLine": 47,
        "endColumn": 24,
        "path": "backend/tests/conftest.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'test_app' from outer scope (line 11)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "tests.conftest",
        "obj": "auth_client",
        "line": 47,
        "column": 26,
        "endLine": 47,
        "endColumn": 43,
        "path": "backend/tests/conftest.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'additional_params' from outer scope (line 33)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "tests.conftest",
        "obj": "paid_client",
        "line": 63,
        "column": 0,
        "endLine": 63,
        "endColumn": 15,
        "path": "backend/tests/conftest.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "tests.conftest",
        "obj": "paid_client",
        "line": 63,
        "column": 16,
        "endLine": 63,
        "endColumn": 24,
        "path": "backend/tests/conftest.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'test_app' from outer scope (line 11)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "tests.conftest",
        "obj": "paid_client",
        "line": 63,
        "column": 26,
        "endLine": 63,
        "endColumn": 43,
        "path": "backend/tests/conftest.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'additional_params' from outer scope (line 33)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "tests.conftest",
        "obj": "",
        "line": 6,
        "column": 0,
        "endLine": 6,
        "endColumn": 36,
        "path": "backend/tests/conftest.py",
        "symbol": "unused-import",
        "message": "Unused db imported from config.firebase",
        "message-id": "W0611"
    },
    {
        "type": "convention",
        "module": "tests.test_errors",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/tests/test_errors.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "convention",
        "module": "tests.test_errors",
        "obj": "TestErrors",
        "line": 8,
        "column": 0,
        "endLine": 8,
        "endColumn": 16,
        "path": "backend/tests/test_errors.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "tests.test_errors",
        "obj": "TestErrors.test_handle_exception",
        "line": 9,
        "column": 4,
        "endLine": 9,
        "endColumn": 29,
        "path": "backend/tests/test_errors.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "tests.test_errors",
        "obj": "TestErrors.test_http_error",
        "line": 20,
        "column": 4,
        "endLine": 20,
        "endColumn": 23,
        "path": "backend/tests/test_errors.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "tests.test_errors",
        "obj": "TestErrors.test_http_error",
        "line": 24,
        "column": 45,
        "endLine": 24,
        "endColumn": 47,
        "path": "backend/tests/test_errors.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'cm'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "tests.test_errors",
        "obj": "TestErrors.test_handle_pyrebase",
        "line": 27,
        "column": 4,
        "endLine": 27,
        "endColumn": 28,
        "path": "backend/tests/test_errors.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "tests.test_errors",
        "obj": "TestErrors.test_handle_pyrebase",
        "line": 47,
        "column": 15,
        "endLine": 47,
        "endColumn": 24,
        "path": "backend/tests/test_errors.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "convention",
        "module": "tests.parsing.test_open_weather_parser",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/tests/parsing/test_open_weather_parser.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "convention",
        "module": "tests.parsing.test_open_weather_parser",
        "obj": "TestOpenWeatherParser",
        "line": 7,
        "column": 0,
        "endLine": 7,
        "endColumn": 27,
        "path": "backend/tests/parsing/test_open_weather_parser.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "warning",
        "module": "tests.parsing.test_open_weather_parser",
        "obj": "TestOpenWeatherParser.setUpClass",
        "line": 11,
        "column": 46,
        "endLine": 11,
        "endColumn": 54,
        "path": "backend/tests/parsing/test_open_weather_parser.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'response'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "tests.parsing.test_open_weather_parser",
        "obj": "TestOpenWeatherParser.test_current_weather",
        "line": 89,
        "column": 4,
        "endLine": 89,
        "endColumn": 28,
        "path": "backend/tests/parsing/test_open_weather_parser.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "tests.parsing.test_open_weather_parser",
        "obj": "TestOpenWeatherParser.test_forecast",
        "line": 119,
        "column": 4,
        "endLine": 119,
        "endColumn": 21,
        "path": "backend/tests/parsing/test_open_weather_parser.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "tests.parsing.test_open_meteo_parser",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/tests/parsing/test_open_meteo_parser.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "convention",
        "module": "tests.parsing.test_open_meteo_parser",
        "obj": "TestOpenMeteoParser",
        "line": 8,
        "column": 0,
        "endLine": 8,
        "endColumn": 25,
        "path": "backend/tests/parsing/test_open_meteo_parser.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "tests.parsing.test_open_meteo_parser",
        "obj": "TestOpenMeteoParser.test_historical_data",
        "line": 40,
        "column": 4,
        "endLine": 40,
        "endColumn": 28,
        "path": "backend/tests/parsing/test_open_meteo_parser.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "tests.parsing.test_open_meteo_parser",
        "obj": "TestOpenMeteoParser.test_parse_air_quality",
        "line": 55,
        "column": 4,
        "endLine": 55,
        "endColumn": 30,
        "path": "backend/tests/parsing/test_open_meteo_parser.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "tests.parsing.test_open_meteo_parser",
        "obj": "",
        "line": 4,
        "column": 0,
        "endLine": 4,
        "endColumn": 51,
        "path": "backend/tests/parsing/test_open_meteo_parser.py",
        "symbol": "unused-import",
        "message": "Unused ClimateStats imported from models.weather",
        "message-id": "W0611"
    },
    {
        "type": "convention",
        "module": "tests.services.test_open_weather_api",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/tests/services/test_open_weather_api.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "convention",
        "module": "tests.services.test_open_weather_api",
        "obj": "TestOpenWeatherAPI",
        "line": 11,
        "column": 0,
        "endLine": 11,
        "endColumn": 24,
        "path": "backend/tests/services/test_open_weather_api.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "tests.services.test_open_weather_api",
        "obj": "TestOpenWeatherAPI.test_get_weather",
        "line": 16,
        "column": 4,
        "endLine": 16,
        "endColumn": 24,
        "path": "backend/tests/services/test_open_weather_api.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "tests.services.test_open_weather_api",
        "obj": "TestOpenWeatherAPI.test_get_forecast",
        "line": 22,
        "column": 4,
        "endLine": 22,
        "endColumn": 25,
        "path": "backend/tests/services/test_open_weather_api.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "tests.services.test_open_weather_api",
        "obj": "TestOpenWeatherAPI.test_get_api_response",
        "line": 28,
        "column": 4,
        "endLine": 28,
        "endColumn": 29,
        "path": "backend/tests/services/test_open_weather_api.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "tests.services.test_open_weather_api",
        "obj": "TestOpenWeatherAPI.test_get_api_error",
        "line": 36,
        "column": 4,
        "endLine": 36,
        "endColumn": 26,
        "path": "backend/tests/services/test_open_weather_api.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "tests.services.test_services_utils",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/tests/services/test_services_utils.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "convention",
        "module": "tests.services.test_services_utils",
        "obj": "TestServices",
        "line": 6,
        "column": 0,
        "endLine": 6,
        "endColumn": 18,
        "path": "backend/tests/services/test_services_utils.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "tests.services.test_services_utils",
        "obj": "TestServices.test_parse_query",
        "line": 7,
        "column": 4,
        "endLine": 7,
        "endColumn": 24,
        "path": "backend/tests/services/test_services_utils.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "tests.services.test_services_utils",
        "obj": "TestServices.test_units_appendix",
        "line": 14,
        "column": 4,
        "endLine": 14,
        "endColumn": 27,
        "path": "backend/tests/services/test_services_utils.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "tests.services.test_open_meteo_api",
        "obj": "",
        "line": 27,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/tests/services/test_open_meteo_api.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "tests.services.test_open_meteo_api",
        "obj": "",
        "line": 36,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/tests/services/test_open_meteo_api.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "tests.services.test_open_meteo_api",
        "obj": "",
        "line": 48,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/tests/services/test_open_meteo_api.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "tests.services.test_open_meteo_api",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/tests/services/test_open_meteo_api.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "convention",
        "module": "tests.services.test_open_meteo_api",
        "obj": "TestOpenMeteoAPI",
        "line": 8,
        "column": 0,
        "endLine": 8,
        "endColumn": 22,
        "path": "backend/tests/services/test_open_meteo_api.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "tests.services.test_open_meteo_api",
        "obj": "TestOpenMeteoAPI.test_get_air_quality",
        "line": 13,
        "column": 4,
        "endLine": 13,
        "endColumn": 28,
        "path": "backend/tests/services/test_open_meteo_api.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "tests.services.test_open_meteo_api",
        "obj": "TestOpenMeteoAPI.test_get_historical_data",
        "line": 19,
        "column": 4,
        "endLine": 19,
        "endColumn": 32,
        "path": "backend/tests/services/test_open_meteo_api.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "tests.services.test_open_meteo_api",
        "obj": "TestOpenMeteoAPI.test_get_api_response_climate",
        "line": 25,
        "column": 4,
        "endLine": 25,
        "endColumn": 37,
        "path": "backend/tests/services/test_open_meteo_api.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "tests.services.test_open_meteo_api",
        "obj": "TestOpenMeteoAPI.test_get_api_response_error",
        "line": 34,
        "column": 4,
        "endLine": 34,
        "endColumn": 35,
        "path": "backend/tests/services/test_open_meteo_api.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "tests.services.test_open_meteo_api",
        "obj": "TestOpenMeteoAPI.test_get_api_response_error",
        "line": 39,
        "column": 12,
        "endLine": 39,
        "endColumn": 20,
        "path": "backend/tests/services/test_open_meteo_api.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'response'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "tests.services.test_open_meteo_api",
        "obj": "TestOpenMeteoAPI.test_get_api_response_missing",
        "line": 46,
        "column": 4,
        "endLine": 46,
        "endColumn": 37,
        "path": "backend/tests/services/test_open_meteo_api.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "tests.routes.test_middlware",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/tests/routes/test_middlware.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "convention",
        "module": "tests.routes.test_middlware",
        "obj": "test_trusted_host_middleware",
        "line": 6,
        "column": 0,
        "endLine": 6,
        "endColumn": 32,
        "path": "backend/tests/routes/test_middlware.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "tests.routes.test_middlware",
        "obj": "test_trusted_host_middleware",
        "line": 6,
        "column": 43,
        "endLine": 6,
        "endColumn": 60,
        "path": "backend/tests/routes/test_middlware.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'additional_params'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "tests.routes.test_middlware",
        "obj": "test_fastapi_query_check_missing",
        "line": 15,
        "column": 0,
        "endLine": 15,
        "endColumn": 36,
        "path": "backend/tests/routes/test_middlware.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "tests.routes.test_middlware",
        "obj": "test_fastapi_body_check_missing",
        "line": 33,
        "column": 0,
        "endLine": 33,
        "endColumn": 35,
        "path": "backend/tests/routes/test_middlware.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "tests.routes.test_middlware",
        "obj": "test_fastapi_not_found",
        "line": 52,
        "column": 0,
        "endLine": 52,
        "endColumn": 26,
        "path": "backend/tests/routes/test_middlware.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "tests.routes.test_middlware",
        "obj": "test_rate_limiter",
        "line": 62,
        "column": 0,
        "endLine": 62,
        "endColumn": 21,
        "path": "backend/tests/routes/test_middlware.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "tests.routes.test_auth",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/tests/routes/test_auth.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "convention",
        "module": "tests.routes.test_auth",
        "obj": "test_login",
        "line": 1,
        "column": 0,
        "endLine": 1,
        "endColumn": 14,
        "path": "backend/tests/routes/test_auth.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "tests.routes.test_auth",
        "obj": "test_refresh",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 16,
        "path": "backend/tests/routes/test_auth.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "tests.routes.test_auth",
        "obj": "test_logout",
        "line": 50,
        "column": 0,
        "endLine": 50,
        "endColumn": 15,
        "path": "backend/tests/routes/test_auth.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "tests.routes.test_weather",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/tests/routes/test_weather.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "warning",
        "module": "tests.routes.test_weather",
        "obj": "_test_weather",
        "line": 7,
        "column": 47,
        "endLine": 7,
        "endColumn": 53,
        "path": "backend/tests/routes/test_weather.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'client' from outer scope (line 4)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "tests.routes.test_weather",
        "obj": "test_weather_by_city",
        "line": 24,
        "column": 0,
        "endLine": 24,
        "endColumn": 24,
        "path": "backend/tests/routes/test_weather.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "tests.routes.test_weather",
        "obj": "test_weather_by_coordinates",
        "line": 31,
        "column": 0,
        "endLine": 31,
        "endColumn": 31,
        "path": "backend/tests/routes/test_weather.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "tests.routes.test_weather",
        "obj": "test_weather_anonymous",
        "line": 47,
        "column": 0,
        "endLine": 47,
        "endColumn": 26,
        "path": "backend/tests/routes/test_weather.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "tests.routes.test_weather",
        "obj": "test_weather_wrong_token",
        "line": 53,
        "column": 0,
        "endLine": 53,
        "endColumn": 28,
        "path": "backend/tests/routes/test_weather.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "tests.routes.test_weather",
        "obj": "test_weather_openweather_exception",
        "line": 63,
        "column": 0,
        "endLine": 63,
        "endColumn": 38,
        "path": "backend/tests/routes/test_weather.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "tests.routes.test_payment",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/tests/routes/test_payment.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "convention",
        "module": "tests.routes.test_payment",
        "obj": "test_create_payment_session",
        "line": 5,
        "column": 0,
        "endLine": 5,
        "endColumn": 31,
        "path": "backend/tests/routes/test_payment.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "tests.routes.test_payment",
        "obj": "test_payment_success",
        "line": 26,
        "column": 0,
        "endLine": 26,
        "endColumn": 24,
        "path": "backend/tests/routes/test_payment.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "tests.routes.test_payment",
        "obj": "",
        "line": 2,
        "column": 0,
        "endLine": 2,
        "endColumn": 46,
        "path": "backend/tests/routes/test_payment.py",
        "symbol": "unused-import",
        "message": "Unused RedirectResponse imported from fastapi.responses",
        "message-id": "W0611"
    },
    {
        "type": "convention",
        "module": "utils.errors",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/utils/errors.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "convention",
        "module": "utils.errors",
        "obj": "handle_pyrebase",
        "line": 9,
        "column": 0,
        "endLine": 9,
        "endColumn": 19,
        "path": "backend/utils/errors.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "utils.errors",
        "obj": "handle_exception",
        "line": 25,
        "column": 0,
        "endLine": 25,
        "endColumn": 20,
        "path": "backend/utils/errors.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "utils.errors",
        "obj": "handle_exception.wrapper",
        "line": 37,
        "column": 15,
        "endLine": 37,
        "endColumn": 24,
        "path": "backend/utils/errors.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "warning",
        "module": "utils.errors",
        "obj": "handle_exception.wrapper",
        "line": 30,
        "column": 12,
        "endLine": 32,
        "endColumn": 13,
        "path": "backend/utils/errors.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'except ValueError as exc' and 'raise HTTPException(detail='Missing request data or parameters', status_code=400) from exc'",
        "message-id": "W0707"
    },
    {
        "type": "warning",
        "module": "utils.errors",
        "obj": "handle_exception.wrapper",
        "line": 34,
        "column": 12,
        "endLine": 36,
        "endColumn": 13,
        "path": "backend/utils/errors.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'except TypeError as exc' and 'raise HTTPException(detail='Invalid request data or parameters', status_code=400) from exc'",
        "message-id": "W0707"
    },
    {
        "type": "warning",
        "module": "utils.errors",
        "obj": "",
        "line": 6,
        "column": 0,
        "endLine": 6,
        "endColumn": 41,
        "path": "backend/utils/errors.py",
        "symbol": "unused-import",
        "message": "Unused HTTPError imported from requests.exceptions",
        "message-id": "W0611"
    },
    {
        "type": "convention",
        "module": "utils.services",
        "obj": "",
        "line": 25,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/utils/services.py",
        "symbol": "missing-final-newline",
        "message": "Final newline missing",
        "message-id": "C0304"
    },
    {
        "type": "convention",
        "module": "utils.services",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/utils/services.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "convention",
        "module": "utils.settings",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/utils/settings.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "convention",
        "module": "utils.parsers.open_meteo",
        "obj": "",
        "line": 55,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/utils/parsers/open_meteo.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.parsers.open_meteo",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/utils/parsers/open_meteo.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "convention",
        "module": "utils.parsers.open_meteo",
        "obj": "OpenMeteoParser",
        "line": 6,
        "column": 0,
        "endLine": 6,
        "endColumn": 21,
        "path": "backend/utils/parsers/open_meteo.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "utils.parsers.open_weather",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/utils/parsers/open_weather.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "convention",
        "module": "utils.parsers.open_weather",
        "obj": "OpenWeatherParser",
        "line": 4,
        "column": 0,
        "endLine": 4,
        "endColumn": 23,
        "path": "backend/utils/parsers/open_weather.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "convention",
        "module": "models.security",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/models/security.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "error",
        "module": "models.security",
        "obj": "",
        "line": 7,
        "column": 0,
        "endLine": 7,
        "endColumn": 30,
        "path": "backend/models/security.py",
        "symbol": "no-name-in-module",
        "message": "No name 'BaseModel' in module 'pydantic'",
        "message-id": "E0611"
    },
    {
        "type": "convention",
        "module": "models.security",
        "obj": "AuthToken",
        "line": 12,
        "column": 0,
        "endLine": 12,
        "endColumn": 15,
        "path": "backend/models/security.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "refactor",
        "module": "models.security",
        "obj": "AuthToken",
        "line": 12,
        "column": 0,
        "endLine": 12,
        "endColumn": 15,
        "path": "backend/models/security.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (0/2)",
        "message-id": "R0903"
    },
    {
        "type": "convention",
        "module": "models.security",
        "obj": "CsrfSettings",
        "line": 17,
        "column": 0,
        "endLine": 17,
        "endColumn": 18,
        "path": "backend/models/security.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "refactor",
        "module": "models.security",
        "obj": "CsrfSettings",
        "line": 17,
        "column": 0,
        "endLine": 17,
        "endColumn": 18,
        "path": "backend/models/security.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (0/2)",
        "message-id": "R0903"
    },
    {
        "type": "convention",
        "module": "models.weather",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/models/weather.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "error",
        "module": "models.weather",
        "obj": "",
        "line": 3,
        "column": 0,
        "endLine": 3,
        "endColumn": 30,
        "path": "backend/models/weather.py",
        "symbol": "no-name-in-module",
        "message": "No name 'BaseModel' in module 'pydantic'",
        "message-id": "E0611"
    },
    {
        "type": "refactor",
        "module": "models.weather",
        "obj": "BaseWeather",
        "line": 6,
        "column": 0,
        "endLine": 6,
        "endColumn": 17,
        "path": "backend/models/weather.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (0/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "models.weather",
        "obj": "ClimateStats",
        "line": 25,
        "column": 0,
        "endLine": 25,
        "endColumn": 18,
        "path": "backend/models/weather.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (0/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "models.weather",
        "obj": "AirQuality",
        "line": 31,
        "column": 0,
        "endLine": 31,
        "endColumn": 16,
        "path": "backend/models/weather.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (0/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "models.weather",
        "obj": "CurrentWeather",
        "line": 37,
        "column": 0,
        "endLine": 37,
        "endColumn": 20,
        "path": "backend/models/weather.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (0/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "models.weather",
        "obj": "ThreeHourWeather",
        "line": 47,
        "column": 0,
        "endLine": 47,
        "endColumn": 22,
        "path": "backend/models/weather.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (0/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "models.weather",
        "obj": "Forecast",
        "line": 55,
        "column": 0,
        "endLine": 55,
        "endColumn": 14,
        "path": "backend/models/weather.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (0/2)",
        "message-id": "R0903"
    },
    {
        "type": "convention",
        "module": "services.open_weather_api",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/services/open_weather_api.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "warning",
        "module": "services.open_weather_api",
        "obj": "OpenWeatherAPI.get_api_response",
        "line": 48,
        "column": 31,
        "endLine": 48,
        "endColumn": 40,
        "path": "backend/services/open_weather_api.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "services.open_weather_api",
        "obj": "",
        "line": 6,
        "column": 0,
        "endLine": 6,
        "endColumn": 15,
        "path": "backend/services/open_weather_api.py",
        "symbol": "unused-import",
        "message": "Unused import requests",
        "message-id": "W0611"
    },
    {
        "type": "convention",
        "module": "services.open_meteo",
        "obj": "",
        "line": 41,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/services/open_meteo.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "services.open_meteo",
        "obj": "",
        "line": 54,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/services/open_meteo.py",
        "symbol": "trailing-whitespace",
        "message": "Trailing whitespace",
        "message-id": "C0303"
    },
    {
        "type": "convention",
        "module": "services.open_meteo",
        "obj": "",
        "line": 71,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/services/open_meteo.py",
        "symbol": "line-too-long",
        "message": "Line too long (121/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "services.open_meteo",
        "obj": "",
        "line": 82,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/services/open_meteo.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "services.open_meteo",
        "obj": "",
        "line": 85,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/services/open_meteo.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "services.open_meteo",
        "obj": "",
        "line": 98,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/services/open_meteo.py",
        "symbol": "line-too-long",
        "message": "Line too long (194/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "services.open_meteo",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/services/open_meteo.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "convention",
        "module": "services.open_meteo",
        "obj": "OpenMeteoAPI",
        "line": 14,
        "column": 0,
        "endLine": 14,
        "endColumn": 18,
        "path": "backend/services/open_meteo.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "warning",
        "module": "services.open_meteo",
        "obj": "OpenMeteoAPI.get_api_response",
        "line": 21,
        "column": 8,
        "endLine": 21,
        "endColumn": 17,
        "path": "backend/services/open_meteo.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "services.open_meteo",
        "obj": "OpenMeteoAPI.get_api_response",
        "line": 49,
        "column": 31,
        "endLine": 49,
        "endColumn": 52,
        "path": "backend/services/open_meteo.py",
        "symbol": "singleton-comparison",
        "message": "Comparison 'data['error'] == True' should be 'data['error'] is True' if checking for the singleton value True, or 'bool(data['error'])' if testing for truthiness",
        "message-id": "C0121"
    },
    {
        "type": "warning",
        "module": "services.open_meteo",
        "obj": "",
        "line": 5,
        "column": 0,
        "endLine": 5,
        "endColumn": 15,
        "path": "backend/services/open_meteo.py",
        "symbol": "unused-import",
        "message": "Unused import requests",
        "message-id": "W0611"
    },
    {
        "type": "convention",
        "module": "legacy.api",
        "obj": "",
        "line": 176,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/legacy/api.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "legacy.api",
        "obj": "",
        "line": 220,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/legacy/api.py",
        "symbol": "line-too-long",
        "message": "Line too long (123/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "legacy.api",
        "obj": "",
        "line": 295,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/legacy/api.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "legacy.api",
        "obj": "",
        "line": 298,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/legacy/api.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "legacy.api",
        "obj": "",
        "line": 312,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/legacy/api.py",
        "symbol": "line-too-long",
        "message": "Line too long (195/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "legacy.api",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/legacy/api.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "warning",
        "module": "legacy.api",
        "obj": "OpenWeatherAPI.get_api_response",
        "line": 41,
        "column": 31,
        "endLine": 41,
        "endColumn": 40,
        "path": "backend/legacy/api.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "legacy.api",
        "obj": "OpenWeatherAPI.get_api_response",
        "line": 56,
        "column": 19,
        "endLine": 56,
        "endColumn": 36,
        "path": "backend/legacy/api.py",
        "symbol": "missing-timeout",
        "message": "Missing timeout argument for method 'requests.get' can cause your program to hang indefinitely",
        "message-id": "W3101"
    },
    {
        "type": "convention",
        "module": "legacy.api",
        "obj": "OpenMeteoAPI",
        "line": 169,
        "column": 0,
        "endLine": 169,
        "endColumn": 18,
        "path": "backend/legacy/api.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "error",
        "module": "legacy.api",
        "obj": "OpenMeteoAPI.get_air_quality",
        "line": 219,
        "column": 14,
        "endLine": 219,
        "endColumn": 30,
        "path": "backend/legacy/api.py",
        "symbol": "no-member",
        "message": "Instance of 'OpenMeteoAPI' has no 'parse_query' member",
        "message-id": "E1101"
    },
    {
        "type": "warning",
        "module": "legacy.api",
        "obj": "OpenMeteoAPI.get_air_quality",
        "line": 222,
        "column": 19,
        "endLine": 222,
        "endColumn": 36,
        "path": "backend/legacy/api.py",
        "symbol": "missing-timeout",
        "message": "Missing timeout argument for method 'requests.get' can cause your program to hang indefinitely",
        "message-id": "W3101"
    },
    {
        "type": "error",
        "module": "legacy.api",
        "obj": "OpenMeteoAPI.get_historical_data",
        "line": 311,
        "column": 14,
        "endLine": 311,
        "endColumn": 30,
        "path": "backend/legacy/api.py",
        "symbol": "no-member",
        "message": "Instance of 'OpenMeteoAPI' has no 'parse_query' member",
        "message-id": "E1101"
    },
    {
        "type": "warning",
        "module": "legacy.api",
        "obj": "OpenMeteoAPI.get_historical_data",
        "line": 315,
        "column": 19,
        "endLine": 315,
        "endColumn": 36,
        "path": "backend/legacy/api.py",
        "symbol": "missing-timeout",
        "message": "Missing timeout argument for method 'requests.get' can cause your program to hang indefinitely",
        "message-id": "W3101"
    },
    {
        "type": "warning",
        "module": "legacy.api",
        "obj": "",
        "line": 5,
        "column": 0,
        "endLine": 5,
        "endColumn": 18,
        "path": "backend/legacy/api.py",
        "symbol": "unused-import",
        "message": "Unused numpy imported as np",
        "message-id": "W0611"
    },
    {
        "type": "convention",
        "module": "legacy.models",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/legacy/models.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "error",
        "module": "legacy.models",
        "obj": "",
        "line": 5,
        "column": 0,
        "endLine": 5,
        "endColumn": 30,
        "path": "backend/legacy/models.py",
        "symbol": "no-name-in-module",
        "message": "No name 'BaseModel' in module 'pydantic'",
        "message-id": "E0611"
    },
    {
        "type": "refactor",
        "module": "legacy.models",
        "obj": "BaseWeather",
        "line": 10,
        "column": 0,
        "endLine": 10,
        "endColumn": 17,
        "path": "backend/legacy/models.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (0/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "legacy.models",
        "obj": "ClimateStats",
        "line": 29,
        "column": 0,
        "endLine": 29,
        "endColumn": 18,
        "path": "backend/legacy/models.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (0/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "legacy.models",
        "obj": "AirQuality",
        "line": 35,
        "column": 0,
        "endLine": 35,
        "endColumn": 16,
        "path": "backend/legacy/models.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (0/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "legacy.models",
        "obj": "CurrentWeather",
        "line": 41,
        "column": 0,
        "endLine": 41,
        "endColumn": 20,
        "path": "backend/legacy/models.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (0/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "legacy.models",
        "obj": "ThreeHourWeather",
        "line": 51,
        "column": 0,
        "endLine": 51,
        "endColumn": 22,
        "path": "backend/legacy/models.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (0/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "legacy.models",
        "obj": "Forecast",
        "line": 59,
        "column": 0,
        "endLine": 59,
        "endColumn": 14,
        "path": "backend/legacy/models.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (0/2)",
        "message-id": "R0903"
    },
    {
        "type": "convention",
        "module": "legacy.models",
        "obj": "AuthToken",
        "line": 69,
        "column": 0,
        "endLine": 69,
        "endColumn": 15,
        "path": "backend/legacy/models.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "refactor",
        "module": "legacy.models",
        "obj": "AuthToken",
        "line": 69,
        "column": 0,
        "endLine": 69,
        "endColumn": 15,
        "path": "backend/legacy/models.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (0/2)",
        "message-id": "R0903"
    },
    {
        "type": "convention",
        "module": "legacy.models",
        "obj": "CsrfSettings",
        "line": 74,
        "column": 0,
        "endLine": 74,
        "endColumn": 18,
        "path": "backend/legacy/models.py",
        "symbol": "missing-class-docstring",
        "message": "Missing class docstring",
        "message-id": "C0115"
    },
    {
        "type": "refactor",
        "module": "legacy.models",
        "obj": "CsrfSettings",
        "line": 74,
        "column": 0,
        "endLine": 74,
        "endColumn": 18,
        "path": "backend/legacy/models.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (0/2)",
        "message-id": "R0903"
    },
    {
        "type": "convention",
        "module": "routes.payment",
        "obj": "",
        "line": 49,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/routes/payment.py",
        "symbol": "line-too-long",
        "message": "Line too long (141/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "routes.payment",
        "obj": "",
        "line": 94,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/routes/payment.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "routes.payment",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/routes/payment.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "convention",
        "module": "routes.payment",
        "obj": "create_checkout_session",
        "line": 25,
        "column": 0,
        "endLine": 25,
        "endColumn": 33,
        "path": "backend/routes/payment.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "routes.payment",
        "obj": "create_checkout_session",
        "line": 26,
        "column": 4,
        "endLine": 26,
        "endColumn": 24,
        "path": "backend/routes/payment.py",
        "symbol": "invalid-name",
        "message": "Argument name \"authToken\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "routes.payment",
        "obj": "create_checkout_session",
        "line": 50,
        "column": 23,
        "endLine": 50,
        "endColumn": 54,
        "path": "backend/routes/payment.py",
        "symbol": "f-string-without-interpolation",
        "message": "Using an f-string that does not have any interpolated variables",
        "message-id": "W1309"
    },
    {
        "type": "warning",
        "module": "routes.payment",
        "obj": "create_checkout_session",
        "line": 67,
        "column": 8,
        "endLine": 69,
        "endColumn": 9,
        "path": "backend/routes/payment.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'raise HTTPException(detail=f\"Error in firebase: {response[0]['error']}\", status_code=response[1]) from e'",
        "message-id": "W0707"
    },
    {
        "type": "warning",
        "module": "routes.payment",
        "obj": "create_checkout_session",
        "line": 71,
        "column": 8,
        "endLine": 73,
        "endColumn": 9,
        "path": "backend/routes/payment.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'raise HTTPException(detail=f'Error in stripe: {e.user_message}', status_code=e.http_status) from e'",
        "message-id": "W0707"
    },
    {
        "type": "warning",
        "module": "routes.payment",
        "obj": "create_checkout_session",
        "line": 27,
        "column": 4,
        "endLine": 27,
        "endColumn": 20,
        "path": "backend/routes/payment.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'request'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "routes.payment",
        "obj": "create_checkout_session",
        "line": 29,
        "column": 4,
        "endLine": 29,
        "endColumn": 29,
        "path": "backend/routes/payment.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'csrf_protect'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "routes.payment",
        "obj": "payment_success",
        "line": 78,
        "column": 0,
        "endLine": 78,
        "endColumn": 25,
        "path": "backend/routes/payment.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "refactor",
        "module": "routes.payment",
        "obj": "payment_success",
        "line": 87,
        "column": 8,
        "endLine": 93,
        "endColumn": 13,
        "path": "backend/routes/payment.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "warning",
        "module": "routes.payment",
        "obj": "payment_success",
        "line": 89,
        "column": 40,
        "endLine": 89,
        "endColumn": 65,
        "path": "backend/routes/payment.py",
        "symbol": "f-string-without-interpolation",
        "message": "Using an f-string that does not have any interpolated variables",
        "message-id": "W1309"
    },
    {
        "type": "warning",
        "module": "routes.payment",
        "obj": "payment_success",
        "line": 97,
        "column": 8,
        "endLine": 99,
        "endColumn": 9,
        "path": "backend/routes/payment.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'raise HTTPException(detail=f\"Error in firebase: {response[0]['error']}\", status_code=response[1]) from e'",
        "message-id": "W0707"
    },
    {
        "type": "warning",
        "module": "routes.payment",
        "obj": "payment_success",
        "line": 101,
        "column": 8,
        "endLine": 101,
        "endColumn": 83,
        "path": "backend/routes/payment.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'except KeyError as exc' and 'raise HTTPException(detail='Verification token not found', status_code=400) from exc'",
        "message-id": "W0707"
    },
    {
        "type": "warning",
        "module": "routes.payment",
        "obj": "payment_success",
        "line": 103,
        "column": 8,
        "endLine": 103,
        "endColumn": 83,
        "path": "backend/routes/payment.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'except TypeError as exc' and 'raise HTTPException(detail='Verification token not found', status_code=400) from exc'",
        "message-id": "W0707"
    },
    {
        "type": "convention",
        "module": "routes.weather",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/routes/weather.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "refactor",
        "module": "routes.weather",
        "obj": "call_api",
        "line": 36,
        "column": 4,
        "endLine": 55,
        "endColumn": 9,
        "path": "backend/routes/weather.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "routes.weather",
        "obj": "weather_by_city",
        "line": 60,
        "column": 26,
        "endLine": 60,
        "endColumn": 46,
        "path": "backend/routes/weather.py",
        "symbol": "invalid-name",
        "message": "Argument name \"authToken\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "routes.weather",
        "obj": "weather_by_city",
        "line": 83,
        "column": 8,
        "endLine": 85,
        "endColumn": 9,
        "path": "backend/routes/weather.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'raise HTTPException(detail=f\"Error in firebase: {response[0]['error']}\", status_code=response[1]) from e'",
        "message-id": "W0707"
    },
    {
        "type": "convention",
        "module": "routes.weather",
        "obj": "weather_by_coordinates",
        "line": 93,
        "column": 4,
        "endLine": 93,
        "endColumn": 24,
        "path": "backend/routes/weather.py",
        "symbol": "invalid-name",
        "message": "Argument name \"authToken\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "routes.weather",
        "obj": "weather_by_coordinates",
        "line": 118,
        "column": 8,
        "endLine": 120,
        "endColumn": 9,
        "path": "backend/routes/weather.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'raise HTTPException(detail=f\"Error in firebase: {response[0]['error']}\", status_code=response[1]) from e'",
        "message-id": "W0707"
    },
    {
        "type": "convention",
        "module": "routes.auth",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/routes/auth.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "convention",
        "module": "routes.auth",
        "obj": "get_csrf_token",
        "line": 15,
        "column": 0,
        "endLine": 15,
        "endColumn": 24,
        "path": "backend/routes/auth.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "convention",
        "module": "routes.auth",
        "obj": "login",
        "line": 25,
        "column": 4,
        "endLine": 25,
        "endColumn": 24,
        "path": "backend/routes/auth.py",
        "symbol": "invalid-name",
        "message": "Argument name \"authToken\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "routes.auth",
        "obj": "login",
        "line": 71,
        "column": 8,
        "endLine": 73,
        "endColumn": 9,
        "path": "backend/routes/auth.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'raise HTTPException(detail=f\"Error in firebase: {response[0]['error']}\", status_code=response[1]) from e'",
        "message-id": "W0707"
    },
    {
        "type": "warning",
        "module": "routes.auth",
        "obj": "login",
        "line": 26,
        "column": 4,
        "endLine": 26,
        "endColumn": 20,
        "path": "backend/routes/auth.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'request'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "routes.auth",
        "obj": "login",
        "line": 28,
        "column": 4,
        "endLine": 28,
        "endColumn": 29,
        "path": "backend/routes/auth.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'csrf_protect'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "routes.auth",
        "obj": "refresh",
        "line": 79,
        "column": 4,
        "endLine": 79,
        "endColumn": 24,
        "path": "backend/routes/auth.py",
        "symbol": "invalid-name",
        "message": "Argument name \"authToken\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "routes.auth",
        "obj": "refresh",
        "line": 110,
        "column": 8,
        "endLine": 112,
        "endColumn": 9,
        "path": "backend/routes/auth.py",
        "symbol": "raise-missing-from",
        "message": "Consider explicitly re-raising using 'raise HTTPException(detail=f\"Error in firebase: {response[0]['error']}\", status_code=response[1]) from e'",
        "message-id": "W0707"
    },
    {
        "type": "warning",
        "module": "routes.auth",
        "obj": "refresh",
        "line": 80,
        "column": 4,
        "endLine": 80,
        "endColumn": 20,
        "path": "backend/routes/auth.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'request'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "routes.auth",
        "obj": "refresh",
        "line": 82,
        "column": 4,
        "endLine": 82,
        "endColumn": 29,
        "path": "backend/routes/auth.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'csrf_protect'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "config.cfg_app",
        "obj": "",
        "line": 50,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/config/cfg_app.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "config.cfg_app",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/config/cfg_app.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "convention",
        "module": "config.cfg_app",
        "obj": "initialize_middleware",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 25,
        "path": "backend/config/cfg_app.py",
        "symbol": "missing-function-docstring",
        "message": "Missing function or method docstring",
        "message-id": "C0116"
    },
    {
        "type": "warning",
        "module": "config.cfg_app",
        "obj": "initialize_app.http_exception_handler",
        "line": 65,
        "column": 37,
        "endLine": 65,
        "endColumn": 44,
        "path": "backend/config/cfg_app.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'request'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "config.cfg_app",
        "obj": "initialize_app.csrf_protect_exception_handler",
        "line": 74,
        "column": 39,
        "endLine": 74,
        "endColumn": 55,
        "path": "backend/config/cfg_app.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'request'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "config.cfg_app",
        "obj": "",
        "line": 7,
        "column": 0,
        "endLine": 7,
        "endColumn": 61,
        "path": "backend/config/cfg_app.py",
        "symbol": "unused-import",
        "message": "Unused Response imported from fastapi",
        "message-id": "W0611"
    },
    {
        "type": "convention",
        "module": "config.firebase",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/config/firebase.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "refactor",
        "module": "config.firebase",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/config/firebase.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==legacy.api:[97:167]\n==utils.parsers.open_weather:[16:84]\n        data = {\n            \"dt\": response[\"dt\"],\n            \"timezone\": response[\"timezone\"],\n            \"temp\": response[\"main\"][\"temp\"],\n            \"temp_min\": response[\"main\"][\"temp_min\"],\n            \"temp_max\": response[\"main\"][\"temp_max\"],\n            \"lat\": response[\"coord\"][\"lat\"],\n            \"lon\": response[\"coord\"][\"lon\"],\n            \"feels_like\": response[\"main\"][\"feels_like\"],\n            \"pressure\": response[\"main\"][\"pressure\"],\n            \"humidity\": response[\"main\"][\"humidity\"],\n            \"clouds\": response[\"clouds\"][\"all\"],\n            \"wind_speed\": response[\"wind\"][\"speed\"],\n            \"visibility\": response[\"visibility\"],\n            \"rain\": response.get(\"rain\", {}).get(\"1h\", 0),\n            \"weather_main\": response[\"weather\"][0][\"main\"],\n            \"weather_description\": response[\"weather\"][0][\"description\"],\n            \"weather_icon\": response[\"weather\"][0][\"icon\"],\n            \"sunrise\": response[\"sys\"][\"sunrise\"],\n            \"sunset\": response[\"sys\"][\"sunset\"],\n        }\n        return CurrentWeather(**data)\n\n    def parse_forecast(\n        self,\n        response: dict[\n            str,\n            dict[str, str]\n            | list[dict[str, int | list[dict[str, str]] | dict[str, float | int]]],\n        ],\n    ) -> Forecast:\n        \"\"\"Parse the response from the API call to get the forecast data\n\n        Args:\n            response: Response from OpenWeatherMap API\n\n        Returns:\n            Forecast: 5 day forecast data for the city (in 3 hour intervals)\n        \"\"\"\n        data = {\n            \"name\": response[\"city\"][\"name\"],\n            \"country\": response[\"city\"][\"country\"],\n            \"lat\": response[\"city\"][\"coord\"][\"lat\"],\n            \"lon\": response[\"city\"][\"coord\"][\"lon\"],\n            \"forecasts\": [\n                {\n                    \"dt\": weather[\"dt\"],\n                    \"temp\": weather[\"main\"][\"temp\"],\n                    \"temp_min\": weather[\"main\"][\"temp_min\"],\n                    \"temp_max\": weather[\"main\"][\"temp_max\"],\n                    \"feels_like\": weather[\"main\"][\"feels_like\"],\n                    \"pressure\": weather[\"main\"][\"pressure\"],\n                    \"humidity\": weather[\"main\"][\"humidity\"],\n                    \"clouds\": weather[\"clouds\"][\"all\"],\n                    \"wind_speed\": weather[\"wind\"][\"speed\"],\n                    \"visibility\": weather[\"visibility\"],\n                    \"rain\": round(weather.get(\"rain\", {}).get(\"3h\", 0) / 3, 2),\n                    \"weather_main\": weather[\"weather\"][0][\"main\"],\n                    \"weather_description\": weather[\"weather\"][0][\"description\"],\n                    \"weather_icon\": weather[\"weather\"][0][\"icon\"],\n                    \"pod\": weather[\"sys\"][\"pod\"],\n                    \"rain_prob\": weather[\"pop\"],\n                    \"dt_txt\": weather[\"dt_txt\"],\n                }\n                for weather in response[\"list\"]\n            ],\n        }\n        return Forecast(**data)\n\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "config.firebase",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/config/firebase.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==legacy.models:[9:68]\n==models.weather:[5:62]\nclass BaseWeather(BaseModel):\n    \"\"\"Pydantic model for weather data validation\"\"\"\n\n    dt: int\n    temp: float\n    temp_min: float\n    temp_max: float\n    feels_like: float\n    pressure: int\n    humidity: int\n    clouds: int\n    wind_speed: float\n    visibility: int\n    rain: float\n    weather_main: str\n    weather_description: str\n    weather_icon: str\n\n\nclass ClimateStats(BaseModel):\n    \"\"\"Pydantic model for climate statistics data validation\"\"\"\n\n    climate: list[dict[str, float | int]]\n\n\nclass AirQuality(BaseModel):\n    \"\"\"Pydantic model for air quality data validation\"\"\"\n\n    aqi: dict[str, list[int]]\n\n\nclass CurrentWeather(BaseWeather):\n    \"\"\"Pydantic model for current weather data validation\"\"\"\n\n    lat: float\n    lon: float\n    sunrise: int\n    sunset: int\n    timezone: int\n\n\nclass ThreeHourWeather(BaseWeather):\n    \"\"\"Pydantic model for 3 hour weather data validation\"\"\"\n\n    pod: str\n    rain_prob: float\n    dt_txt: str\n\n\nclass Forecast(BaseModel):\n    \"\"\"Pydantic model for forecast data validation\"\"\"\n\n    name: str\n    country: str\n    lat: float\n    lon: float\n    forecasts: list[ThreeHourWeather]",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "config.firebase",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/config/firebase.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==legacy.api:[183:202]\n==utils.parsers.open_meteo:[62:81]\n        air_quality = {}\n        for x, *params in zip(\n            response[\"hourly\"][\"time\"],\n            response[\"hourly\"][\"european_aqi\"],\n            response[\"hourly\"][\"european_aqi_pm2_5\"],\n            response[\"hourly\"][\"european_aqi_pm10\"],\n            response[\"hourly\"][\"european_aqi_no2\"],\n            response[\"hourly\"][\"european_aqi_o3\"],\n            response[\"hourly\"][\"european_aqi_so2\"],\n        ):\n            if x.split(\"T\")[0] not in air_quality:\n                air_quality[x.split(\"T\")[0]] = [0] * len(params)\n            for idx, aqi in enumerate(params):\n                if aqi:\n                    air_quality[x.split(\"T\")[0]][idx] = (\n                        aqi\n                        if air_quality[x.split(\"T\")[0]][idx] < aqi\n                        else air_quality[x.split(\"T\")[0]][idx]\n                    )",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "config.firebase",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/config/firebase.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==legacy.api:[256:273]\n==utils.parsers.open_meteo:[18:35]\n        climate_stats = []\n        new_keys = [\n            \"temp\",\n            \"wind_speed\",\n            \"humidity\",\n            \"rain\",\n            \"clouds\",\n            \"pressure\",\n            \"title\",\n        ]\n        today = date.today().strftime(\"%m-%d\")\n        for x, *params in zip(\n            response[\"daily\"][\"time\"],\n            response[\"daily\"][\"temperature_2m_mean\"],\n            response[\"daily\"][\"windspeed_10m_mean\"],\n            response[\"daily\"][\"relative_humidity_2m_mean\"],\n            response[\"daily\"][\"precipitation_sum\"],",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "config.firebase",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/config/firebase.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==legacy.api:[274:286]\n==utils.parsers.open_meteo:[36:48]\n            response[\"daily\"][\"pressure_msl_mean\"],\n        ):\n            temp_dict = {}\n            year, month_day = x.split(\"-\", 1)\n            all_params = params + [year]\n            if month_day == today:\n                for metric, key in zip(all_params, new_keys):\n                    if metric:\n                        temp_dict[key] = metric\n                    else:\n                        temp_dict[key] = 0\n                climate_stats.append(temp_dict)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "config.firebase",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/config/firebase.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==routes.auth:[68:98]\n==routes.weather:[80:109]\n    except HTTPError as e:\n        response = handle_pyrebase(e)\n        raise HTTPException(\n            detail=f\"Error in firebase: {response[0]['error']}\", status_code=response[1]\n        )\n\n\n@handle_exception\n@router.post(\n    \"/weather/coordinates\", dependencies=[Depends(RateLimiter(times=30, seconds=60))]\n)\nasync def weather_by_coordinates(\n    authToken: AuthToken, lat: float, lon: float, units: str = \"metric\"\n):\n    \"\"\"Get weather data for a set of coordinates\n\n    Args:\n        lat: latitude\n        lon: longitude\n        units: units of measurement, can be metric or imperial. Defaults to \"metric\".\n\n    Raises:\n        e: Python exception\n        HTTPException: API call failed\n\n    Returns:\n        dict: weather data for the set of coordinates\n    \"\"\"\n    try:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "config.firebase",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "backend/config/firebase.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==legacy.models:[68:75]\n==models.security:[11:18]\nclass AuthToken(BaseModel):\n    token: str\n    refreshToken: Optional[str] = None\n\n\nclass CsrfSettings(BaseModel):\n    secret_key: str = os.getenv(\"CSRF_SECRET_KEY\")",
        "message-id": "R0801"
    }
]
